1. create user in IAM with admin access
2. install aws cli v2
3. run aws configure

variables
data types
conditions
functions
loops

variables.tf --> same name is not mandatory

variable "<var-name>" {
	type = 
	default = ""
}
number, string, map, list, bool

Project = Expense
Component = Backend
Environment = DEV/UAT/QA/PROD

How do you override default variable values in terraform
terraform.tfvars --> You can override default values in terraform

cmd, tfvars, env variables, default

TF_VAR_<var-name>

1. command line --> -var "<var-name>=<var-value>"
2. tfvars
3. env var
4. default values
5. user prompt

if else, when

if(expression){
	this statement run if expression is true
}
else{
	this statement run if expression is false
}

expression ? "this runs if true" : "this runs if false"

if dev environment t3.micro, if prod env you can run t3.small

loops
=========
1. count based loops --> iterate over list type of variables
2. for each loops
3. dynamic blocks

I want to create
1. 3 ec2 instances --> mysql, backend, frontend
2. 3 r53 private ip records
3. 1 r53 public ip record



count.index --> 0, 1, 2 --> size=3

mysql.daws82s.online
backend.daws82s.online
frontend.daws82s.online

interpolation --> you can concat variables with text

you can't create custom functions in terraform

merge
course1 = {
	name = "devops",
	duration = "120hrs"
}

course2 = {
	name = "terraform",
	duration = "120hrs"
}

merge(course1, course2)

name = "terraform"
duration = "120hrs